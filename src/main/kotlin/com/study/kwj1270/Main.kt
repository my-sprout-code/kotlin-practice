package com.study.kwj1270

class Main

// 함수 선언시 fun 키워드
fun main(args: Array<String>) { // (파라미터 이름: 타입) 형태를 주로 사용
    println("Hello, world!")
    println(max(1, 2))
    println(max2(3, 2))
    println(max3(100, 99))
}
// 클래스 안에 함수를 넣을 필요 없이 최상위 수준에서도 함수 정의 가능하다.
// 배열도 일반적인 클래스이며, 자바와 달리 처리 필요 없다.(컬렉션 그냥 쓰는듯)
// println 과 같이 유용한 메서드를 한번에 사용할 수 있는 라이브러리를 제공한다.
// 세미 콜론을 더 이상 붙이지 않아도 된다.

// 블록이 본문인 함수
// 반환형이 있는 메서드는 매개 변수 뒤에 (:반환타입) 형태로 작성하면 된다.
fun max(a: Int, b:Int):Int {
    return if (a > b) a else b // if를 3항 조건문 처럼 바로 사용할 수 있다.
}
// 코틀린에서 if는 문법이 아닌 연산식이다 -> 계산 가능 -> if 를 사용해서 비교 연산을 실행한다.
// 이와 같이 코틀린은 반복을 제외한 대부분이 문이 아닌 식이다.


// 식이 본문인 함수
// 기본이 식이다 보니 본문 작성을 하지 않고 반환값 정의에 바로 식을 넣을 수도 있다.
fun max2(a: Int, b: Int):Int = if(a > b) a else b

// 식이 본문인 함수 보다 더 간략화
fun max3(a: Int, b: Int) = if(a > b) a else b
// **식이 본문인 함수**의 경우 굳이 사용자가 반환 타입을 적지않아도
// 컴파일러가 함수 본문식을 분석해서 식의 결과 타입을 함수 반환 타입으로 정해준다. (타입 추론)




